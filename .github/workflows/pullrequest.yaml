---
name: pullrequest

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v2

    - name: run linter
      run: make lint

  staticcheck:
    name: staticcheck
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v2

    - name: run staticcheck
      run: make staticcheck

  unit:
    name: unit
    runs-on: ubuntu-latest
    steps:
    - name: check out source code
      uses: actions/checkout@v2

    - name: run tests
      run: make unit

  build:
    name: build
    needs:
      - lint
      - unit
      - staticcheck
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v2

    - name: build
      run: make build

  image:
    name: image
    needs:
      - lint
      - unit
      - staticcheck
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v2

    - name: registry login
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: shipwright-io
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build and push image
      env:
        VERSION: v0.0.0
        IMAGE: ghcr.io/shipwright-io/imgctrl:pr-${{ github.event.number }}
      run: |-
        make image
        make push

  integration:
    name: integration
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v2

    - name: install kind
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: v0.11.1

    - name: create shipwright-build namespace
      run: |-
        kubectl create namespace shipwright-build
        kubectl config set-context --current --namespace=shipwright-build

    - name: install
      run: make install

    - name: sleep for a while
      run: sleep 30

    - name: check deployments
      run: |-
        READY=$(kubectl get deploy imgctrl --no-headers -o=custom-columns=:.status.readyReplicas)
        if [ "$READY" != "1" ]; then
          echo imgctrl deployment not ready
          kubectl get deploy -o yaml
          kubectl get pods -o yaml
          exit 1
        fi

    - name: install kuttl
      run: make get-kuttl

    - name: e2e
      run: make e2e
